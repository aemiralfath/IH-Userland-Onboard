// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aemiralfath/IH-Userland-Onboard/api/email (interfaces: Email)

// Package mock_email is a generated GoMock package.
package mock_email

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockEmail is a mock of Email interface
type MockEmail struct {
	ctrl     *gomock.Controller
	recorder *MockEmailMockRecorder
}

// MockEmailMockRecorder is the mock recorder for MockEmail
type MockEmailMockRecorder struct {
	mock *MockEmail
}

// NewMockEmail creates a new mock instance
func NewMockEmail(ctrl *gomock.Controller) *MockEmail {
	mock := &MockEmail{ctrl: ctrl}
	mock.recorder = &MockEmailMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockEmail) EXPECT() *MockEmailMockRecorder {
	return m.recorder
}

// SendEmail mocks base method
func (m *MockEmail) SendEmail(arg0, arg1, arg2 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SendEmail", arg0, arg1, arg2)
}

// SendEmail indicates an expected call of SendEmail
func (mr *MockEmailMockRecorder) SendEmail(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendEmail", reflect.TypeOf((*MockEmail)(nil).SendEmail), arg0, arg1, arg2)
}
