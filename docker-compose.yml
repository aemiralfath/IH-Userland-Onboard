version: "3.8"
services:
  userland:
    image: golang:1.17
    restart: on-failure
    volumes:
      - ./userland:/ih-userland-onboard/userland
    working_dir: /ih-userland-onboard/userland
    command: /bin/bash -c "go run cmd/main.go"
    ports:
      - "8080:8080/tcp"
    env_file: .env
    environment:
      - SERVER_HOST=${SERVER_HOST}
      - SERVER_PORT=${SERVER_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_ADDR=postgres
      - REDIS_ADDRESS=${REDIS_ADDRESS}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - OTP_DURATION=${OTP_DURATION}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_FROM=${SMTP_FROM}
      - JWT_ALG=${JWT_ALG}
      - JWT_SIGN=${JWT_SIGN}
      - KAFKA_HOST=${KAFKA_HOST}
      - KAFKA_PORT=${KAFKA_PORT}
      - KAFKA_GROUP=${KAFKA_GROUP}
      - KAFKA_OFFSET=${KAFKA_OFFSET}
      - PROFILE_PATH=${PROFILE_PATH}
    depends_on:
      - postgres
      - redis
      - adminer
      - migrate
      - kafka-create-topics
      - zk1
      - zk2
      - zk3
      - kafka-1
      - kafka-2
      - kafka-3
      
  log:
    image: golang:1.17
    working_dir: /ih-userland-onboard/log
    volumes:
      - ./log:/ih-userland-onboard/log
    command: /bin/bash -c "go run ."
    ports:
      - "8081:8080/tcp"
    env_file: .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_ADDR=postgres
      - KAFKA_HOST=${KAFKA_HOST}
      - KAFKA_PORT=${KAFKA_PORT}
      - KAFKA_GROUP=${KAFKA_GROUP}
      - KAFKA_OFFSET=${KAFKA_OFFSET}
    depends_on:
      - postgres
      - redis
      - adminer
      - migrate
      - kafka-create-topics
      - zk1
      - zk2
      - zk3
      - kafka-1
      - kafka-2
      - kafka-3

  adminer:
    image: adminer:standalone
    restart: on-failure
    ports:
      - "8082:8080/tcp"
    depends_on:
      - postgres
      - migrate

  postgres:
    image: postgres:alpine
    restart: on-failure
    ports:
      - "5431:5432/tcp"
    env_file: .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  redis:
    image: "redis:alpine"
    restart: on-failure
    command: redis-server
    ports:
      - "6378:6379/tcp"
    networks: 
      default:
        aliases: 
          - redis_userland

  migrate:
    image: migrate/migrate
    restart: on-failure
    volumes:
      - ./db/migrations:/migrations
    command:
      [
        '-path',
        '/migrations',
        '-database',
        'postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}?sslmode=disable',
        'up',
      ]
    depends_on:
      - postgres

  zk1:
    image: confluentinc/cp-zookeeper:latest
    ports: 
      - "22181:22181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 22181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zk1:22888:23888;zk2:32888:33888;zk3:42888:43888

  zk2:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "32181:32181"
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zk1:22888:23888;zk2:32888:33888;zk3:42888:43888

  zk3:
    image: confluentinc/cp-zookeeper:latest
    ports: 
      - "42181:42181"
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_CLIENT_PORT: 42181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zk1:22888:23888;zk2:32888:33888;zk3:42888:43888

  kafka-1:
    image: confluentinc/cp-kafka:latest
    ports:
      - "19092:19092"
      - "19091:19091"
    depends_on:
      - zk1
      - zk2
      - zk3
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zk1:22181,zk2:32181,zk3:42181
      KAFKA_LISTENERS: LISTENER_INTERNAL://kafka-1:19092,LISTENER_EXTERNAL://kafka-1:19091
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INTERNAL://kafka-1:19092,LISTENER_EXTERNAL://localhost:19091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INTERNAL:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INTERNAL

  kafka-2:
    image: confluentinc/cp-kafka:latest
    ports:
      - "29092:29092"
      - "29091:29091"
    depends_on:
      - zk1
      - zk2
      - zk3
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zk1:22181,zk2:32181,zk3:42181
      KAFKA_LISTENERS: LISTENER_INTERNAL://kafka-2:19092,LISTENER_EXTERNAL://kafka-2:29091
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INTERNAL://kafka-2:19092,LISTENER_EXTERNAL://localhost:29091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INTERNAL:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INTERNAL

  kafka-3:
    image: confluentinc/cp-kafka:latest
    ports: 
      - "39092:39092"
      - "39091:39091"
    depends_on:
      - zk1
      - zk2
      - zk3
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zk1:22181,zk2:32181,zk3:42181
      KAFKA_LISTENERS: LISTENER_INTERNAL://kafka-3:19092,LISTENER_EXTERNAL://kafka-3:39091
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INTERNAL://kafka-3:19092,LISTENER_EXTERNAL://localhost:39091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INTERNAL:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INTERNAL
  
  kafka-create-topics:
    image: confluentinc/cp-kafka:latest
    restart: on-failure
    entrypoint: kafka-topics --create --topic login-succeed --bootstrap-server kafka-1:19092 --partitions 1 --replication-factor 1
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zk1:22181,zk2:32181,zk3:42181
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - zk1
      - zk2
      - zk3